<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>marinho-shoe-showcase</title>
    <meta name="description" content="Lovable Generated Project" />
    <meta name="author" content="Lovable" />
    <meta property="og:title" content="marinho-shoe-showcase" />
    <meta property="og:description" content="Lovable Generated Project" />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="https://lovable.dev/opengraph-image-p98pqg.png" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@lovable_dev" />
    <meta name="twitter:image" content="https://lovable.dev/opengraph-image-p98pqg.png" />
  </head>
  <body>
    <div id="root"></div>
    <script src="https://cdn.gpteng.co/gptengineer.js" type="module"></script>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
import { createRoot } from 'react-dom/client'
import App from './App.tsx'
import './index.css'

createRoot(document.getElementById("root")!).render(<App />);
import { useEffect } from 'react';
import Navbar from '@/components/Navbar';
import Hero from '@/components/Hero';
import ProductGrid from '@/components/ProductGrid';
import Technology from '@/components/Technology';
import About from '@/components/About';
import Footer from '@/components/Footer';
import ScrollToTop from '@/components/ScrollToTop';

const Index = () => {
  // Add logo mask style to the document head
  useEffect(() => {
    const style = document.createElement('style');
    style.innerHTML = `
      .mask-logo {
        -webkit-mask: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 3L3 10.53v.97h18v-.97L12 3zm0 7.47L18.53 12H5.47L12 10.47zm-7 3.53v6h14v-6H5z'/%3E%3C/svg%3E");
        mask: url("data:image/svg+xml,%3Csvg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 3L3 10.53v.97h18v-.97L12 3zm0 7.47L18.53 12H5.47L12 10.47zm-7 3.53v6h14v-6H5z'/%3E%3C/svg%3E");
      }
    `;
    document.head.appendChild(style);
    
    return () => {
      document.head.removeChild(style);
    };
  }, []);

  return (
    <>
      {/* Set document title */}
      <div className="hidden">
        {document.title = "Marinho Shoes | Inovação em Cada Passo"}
      </div>

      <Navbar />
      <Hero />
      <ProductGrid />
      <Technology />
      <About />
      <Footer />
      <ScrollToTop />
    </>
  );
};

export default Index;
import { Toaster } from "@/components/ui/toaster";
import { Toaster as Sonner } from "@/components/ui/sonner";
import { TooltipProvider } from "@/components/ui/tooltip";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { BrowserRouter, Routes, Route } from "react-router-dom";
import Index from "./pages/Index";
import NotFound from "./pages/NotFound";

const queryClient = new QueryClient();

const App = () => (
  <QueryClientProvider client={queryClient}>
    <TooltipProvider>
      <Toaster />
      <Sonner />
      <BrowserRouter>
        <Routes>
          <Route path="/" element={<Index />} />
          {/* ADD ALL CUSTOM ROUTES ABOVE THE CATCH-ALL "*" ROUTE */}
          <Route path="*" element={<NotFound />} />
        </Routes>
      </BrowserRouter>
    </TooltipProvider>
  </QueryClientProvider>
);

export default App;
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* Definição de variáveis de cor para o tema claro */
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    /* ... outras variáveis ... */
    --radius: 0.5rem;
  }

  /* Tema escuro */
  .dark {
    --background: 240 3% 12%;
    --foreground: 210 20% 98%;
    /* ... outras variáveis para o tema escuro ... */
  }
}

@layer base {
  * {
    @apply border-border;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
  }
  
  html {
    @apply scroll-smooth scroll-pt-20;
  }

  body {
    @apply bg-marinho-dark text-marinho-light font-inter leading-relaxed overflow-x-hidden;
  }
}

@layer components {
  .btn {
    @apply inline-flex items-center px-7 py-3.5 text-lg font-medium rounded-full transition-all duration-300 gap-2 border-2 border-transparent;
  }
  
  .btn-primary {
    @apply bg-marinho-blue text-white hover:scale-105 hover:shadow-lg hover:shadow-marinho-blue/30;
  }
  
  .btn-secondary {
    @apply bg-transparent border-marinho-gray text-marinho-light hover:scale-105;
  }

  .section-spacing {
    @apply py-32;
  }

  .animate-on-scroll {
    @apply opacity-0 translate-y-8 transition-all duration-1000 ease-out;
  }
  
  .animate-on-scroll.in-view {
    @apply opacity-100 translate-y-0;
  }
}

:root {
  --marinho-blue: #0071e3;
  --marinho-dark: #1d1d1f;
  --marinho-gray: #86868b;
  --marinho-light: #f5f5f7;
  --marinho-accent: #00c7fc;
  --section-spacing: 120px;
}

.font-inter {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
}
import { useState, useEffect } from 'react';
import { cn } from '@/lib/utils';

const Navbar = () => {
  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 20);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <nav
      className={cn(
        'fixed top-0 w-full py-3 px-[5%] bg-marinho-dark/80 backdrop-blur-xl z-50 flex justify-between items-center transition-all duration-500',
        isScrolled && 'py-2 bg-marinho-dark/95'
      )}
    >
      <div className="flex items-center gap-2 text-xl font-semibold">
        <div className="w-6 h-6 bg-marinho-blue mask-logo" />
        <span>Marinho</span>
      </div>

      <ul className="hidden md:flex gap-10">
        {['Início', 'Produtos', 'Tecnologia', 'Sobre'].map((item) => (
          <li key={item}>
            <a 
              href={`#${item.toLowerCase()}`}
              className="text-sm text-marinho-light relative hover:text-white transition-colors group"
            >
              {item}
              <span className="absolute h-0.5 w-0 bg-marinho-blue -bottom-1 left-0 group-hover:w-full transition-all duration-300" />
            </a>
          </li>
        ))}
      </ul>
    </nav>
  );
};

export default Navbar;
import type { Config } from "tailwindcss";

export default {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{ts,tsx}",
    "./components/**/*.{ts,tsx}",
    "./app/**/*.{ts,tsx}",
    "./src/**/*.{ts,tsx}",
  ],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: '2rem',
      screens: {
        'sm': '640px',
        'md': '768px',
        'lg': '1024px',
        'xl': '1280px',
        '2xl': '1400px'
      }
    },
    extend: {
      colors: {
        /* Definição das cores principais do tema */
        marinho: {
          blue: '#0071e3',
          dark: '#1d1d1f',
          gray: '#86868b',
          light: '#f5f5f7',
          accent: '#00c7fc',
        },
        /* ... outras cores do sistema ... */
      },
      borderRadius: {
        lg: 'var(--radius)',
        md: 'calc(var(--radius) - 2px)',
        sm: 'calc(var(--radius) - 4px)'
      },
      keyframes: {
        /* Definição das animações */
        'accordion-down': { /* ... */ },
        'accordion-up': { /* ... */ },
        fadeIn: {
          '0%': { opacity: '0', transform: 'translateY(30px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' }
        },
        slideIn: {
          '0%': { transform: 'translateX(-100%)' },
          '100%': { transform: 'translateX(0)' }
        }
      },
      animation: {
        'accordion-down': 'accordion-down 0.2s ease-out',
        'accordion-up': 'accordion-up 0.2s ease-out',
        'fade-in': 'fadeIn 1s cubic-bezier(0.23, 1, 0.32, 1) forwards',
        'slide-in': 'slideIn 0.5s ease-out forwards'
      }
    }
  },
  plugins: [require("tailwindcss-animate")],
} satisfies Config;
import { Button } from "@/components/ui/button";

const Hero = () => {
  return (
    <section id="início" className="relative flex items-center justify-center min-h-screen px-[5%] text-center overflow-hidden">
      {/* Video Background */}
      <div className="absolute inset-0 z-0">
        <div className="absolute inset-0 bg-black/60 z-10" />
        <video 
          className="w-full h-full object-cover opacity-40"
          autoPlay 
          muted 
          loop 
          playsInline
        >
          <source src="https://cdn.gpteng.co/dac0b942-e57c-4891-8493-9f5c00d1e3a9/bb46d66f-ec5f-4cc6-b7c9-e7c9f696ff29/video.mp4" type="video/mp4" />
          Your browser does not support the video tag.
        </video>
      </div>

      {/* Hero Content */}
      <div className="max-w-3xl mx-auto z-10 animate-fade-in">
        <h1 className="text-5xl md:text-7xl font-bold mb-6 leading-tight">
          Inovação em <br /> Cada Passo
        </h1>
        <p className="text-xl md:text-2xl text-marinho-gray mb-10 max-w-xl mx-auto">
          Descubra o futuro do calçado com design inovador e tecnologia de ponta
        </p>
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <a href="#produtos" className="btn btn-primary">
            Explorar Coleção
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
              <path d="m9 18 6-6-6-6"/>
            </svg>
          </a>
          <a href="#tecnologia" className="btn btn-secondary">
            Nossa Tecnologia
          </a>
        </div>
      </div>
    </section>
  );
};

export default Hero;
import { cn } from "@/lib/utils";

interface ProductCardProps {
  name: string;
  price: string;
  color: string;
  image: string;
  className?: string;
}

const ProductCard = ({ name, price, color, image, className }: ProductCardProps) => {
  return (
    <div
      className={cn(
        "group relative rounded-2xl overflow-hidden bg-white/3 transition-transform duration-500 hover:-translate-y-3 animate-on-scroll",
        className
      )}
    >
      <div 
        className="h-[400px] bg-cover bg-center transition-transform duration-500 group-hover:scale-105"
        style={{ backgroundImage: `url(${image})` }}
      >
        <div className="absolute inset-0 bg-gradient-to-t from-black/90 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
      </div>
      
      <div className="absolute bottom-0 left-0 right-0 p-6 transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
        <h3 className="text-xl font-semibold">{name}</h3>
        <div className="flex justify-between items-center mt-2">
          <p className="text-marinho-gray">{color}</p>
          <p className="text-lg font-bold">{price}</p>
        </div>
        <button className="mt-4 w-full py-3 rounded-full bg-marinho-blue text-white font-medium opacity-0 group-hover:opacity-100 transition-opacity duration-300">
          Ver Detalhes
        </button>
      </div>
    </div>
  );
};

export default ProductCard;
import ProductCard from "./ProductCard";
import { useEffect, useRef } from "react";

// Sample product data
const products = [
  {
    name: "AeroFlex Pro",
    price: "R$ 599,90",
    color: "Azul Celeste",
    image: "https://cdn.gpteng.co/dac0b942-e57c-4891-8493-9f5c00d1e3a9/273dd091-a6e9-43a6-b8bf-0d44e36e33b5/shoe1.jpg",
  },
  // ... outros produtos ...
];

const ProductGrid = () => {
  const cardsRef = useRef<HTMLDivElement>(null);
  
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('in-view');
          }
        });
      },
      {
        threshold: 0.1,
      }
    );

    const cards = cardsRef.current?.querySelectorAll('.animate-on-scroll');
    cards?.forEach((card) => {
      observer.observe(card);
    });

    return () => {
      cards?.forEach((card) => {
        observer.unobserve(card);
      });
    };
  }, []);

  return (
    <section id="produtos" className="section-spacing px-[5%]">
      <div className="text-center mb-16 animate-on-scroll">
        <h2 className="text-4xl font-bold mb-4">Nossa Coleção</h2>
        <p className="text-marinho-gray text-lg max-w-xl mx-auto">
          Designs exclusivos que combinam estética avançada e máximo conforto para seu dia a dia
        </p>
      </div>

      <div 
        ref={cardsRef} 
        className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
      >
        {products.map((product, index) => (
          <ProductCard
            key={index}
            {...product}
            className="animate-on-scroll"
            style={{ animationDelay: `${index * 100}ms` }}
          />
        ))}
      </div>
    </section>
  );
};

export default ProductGrid;
import { useEffect, useRef } from "react";

const Technology = () => {
  const techSectionRef = useRef<HTMLDivElement>(null);
  
  // Observer para animações ao scroll
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('in-view');
          }
        });
      },
      {
        threshold: 0.1,
      }
    );

    const elements = techSectionRef.current?.querySelectorAll('.animate-on-scroll');
    elements?.forEach((el) => {
      observer.observe(el);
    });

    return () => {
      elements?.forEach((el) => {
        observer.unobserve(el);
      });
    };
  }, []);

  const technologies = [
    {
      title: "AeroFoam™",
      description: "Tecnologia exclusiva que proporciona amortecimento responsivo e leve para uma passada mais suave.",
      icon: "✦"
    },
    // ... outras tecnologias ...
  ];

  return (
    <section id="tecnologia" className="section-spacing px-[5%] bg-gradient-to-b from-marinho-dark to-black">
      <div ref={techSectionRef} className="max-w-6xl mx-auto">
        {/* Título da seção */}
        <div className="text-center mb-20 animate-on-scroll">
          <h2 className="text-4xl font-bold mb-4">Tecnologia de Ponta</h2>
          <p className="text-marinho-gray text-lg max-w-xl mx-auto">
            Inovações exclusivas que definem o futuro do calçado esportivo e casual
          </p>
        </div>

        {/* Grid de tecnologias */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-10">
          {technologies.map((tech, index) => (
            <div 
              key={index}
              className="flex gap-6 p-6 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 animate-on-scroll"
              style={{ animationDelay: `${index * 150}ms` }}
            >
              <div className="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-marinho-blue to-marinho-accent rounded-xl flex items-center justify-center text-2xl">
                {tech.icon}
              </div>
              <div>
                <h3 className="text-xl font-semibold mb-2">{tech.title}</h3>
                <p className="text-marinho-gray">{tech.description}</p>
              </div>
            </div>
          ))}
        </div>
        
        {/* Seção de sustentabilidade */}
        <div className="mt-20 flex flex-col lg:flex-row items-center gap-10 animate-on-scroll">
          {/* ... conteúdo detalhado sobre sustentabilidade ... */}
        </div>
      </div>
    </section>
  );
};

export default Technology;
import { useEffect, useRef } from "react";

const About = () => {
  const aboutSectionRef = useRef<HTMLDivElement>(null);
  
  // Observer para animações ao scroll
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('in-view');
          }
        });
      },
      {
        threshold: 0.1,
      }
    );

    const elements = aboutSectionRef.current?.querySelectorAll('.animate-on-scroll');
    elements?.forEach((el) => {
      observer.observe(el);
    });

    return () => {
      elements?.forEach((el) => {
        observer.unobserve(el);
      });
    };
  }, []);

  const stats = [
    { value: "15+", label: "Anos de Inovação" },
    { value: "28", label: "Países" },
    { value: "2M+", label: "Clientes Satisfeitos" },
    { value: "50+", label: "Patentes" }
  ];

  return (
    <section id="sobre" className="section-spacing px-[5%]">
      <div ref={aboutSectionRef} className="max-w-6xl mx-auto">
        {/* Grid principal */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-16 items-center">
          {/* Coluna de texto */}
          <div>
            <div className="mb-10 animate-on-scroll">
              <h2 className="text-4xl font-bold mb-6">Nossa História</h2>
              {/* ... parágrafos sobre a história ... */}
            </div>

            {/* Grid de estatísticas */}
            <div className="grid grid-cols-2 md:grid-cols-4 gap-6 animate-on-scroll">
              {stats.map((stat, index) => (
                <div key={index} className="text-center">
                  <div className="text-3xl md:text-4xl font-bold text-marinho-blue mb-2">{stat.value}</div>
                  <div className="text-sm text-marinho-gray">{stat.label}</div>
                </div>
              ))}
            </div>
          </div>

          {/* Coluna de imagem */}
          <div className="relative animate-on-scroll">
            {/* ... implementação da imagem com efeitos ... */}
          </div>
        </div>

        {/* Seção de parceiros */}
        <div className="mt-24 text-center animate-on-scroll">
          {/* ... implementação dos parceiros ... */}
        </div>
      </div>
    </section>
  );
};

export default About;
const Footer = () => {
  return (
    <footer className="pt-32 pb-8 px-[5%] bg-black border-t border-white/10">
      <div className="max-w-7xl mx-auto">
        {/* Grid principal do footer */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-12 mb-16">
          {/* Logo e descrição */}
          <div>
            <div className="flex items-center gap-2 text-xl font-semibold mb-6">
              <div className="w-6 h-6 bg-marinho-blue mask-logo" />
              <span>Marinho</span>
            </div>
            <p className="text-marinho-gray mb-4">
              Inovação em cada passo. Descubra o futuro do calçado com design inovador e tecnologia de ponta.
            </p>
            {/* Redes sociais */}
            <div className="flex gap-4">
              {/* ... ícones de redes sociais ... */}
            </div>
          </div>
          
          {/* Links de produtos */}
          <div>
            <h3 className="text-lg font-semibold mb-6">Produtos</h3>
            <ul className="space-y-4">
              {/* ... lista de produtos ... */}
            </ul>
          </div>
          
          {/* ... outros grupos de links ... */}
        </div>
        
        {/* Rodapé inferior com copyright */}
        <div className="border-t border-white/10 pt-8 flex flex-col md:flex-row justify-between items-center">
          <p className="text-sm text-marinho-gray mb-4 md:mb-0">© {new Date().getFullYear()} Marinho Shoes. Todos os direitos reservados.</p>
          <div className="flex gap-6">
            {/* ... links de políticas ... */}
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
import { useState, useEffect } from 'react';

const ScrollToTop = () => {
  const [isVisible, setIsVisible] = useState(false);

  // Controla a visibilidade do botão baseado no scroll
  useEffect(() => {
    const toggleVisibility = () => {
      if (window.scrollY > 500) {
        setIsVisible(true);
      } else {
        setIsVisible(false);
      }
    };

    window.addEventListener('scroll', toggleVisibility);
    return () => window.removeEventListener('scroll', toggleVisibility);
  }, []);

  // Função para rolar para o topo
  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  };

  return (
    <button
      onClick={scrollToTop}
      className={`fixed bottom-6 right-6 z-50 p-3 rounded-full bg-marinho-blue text-white shadow-lg transition-all duration-300 ${
        isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10 pointer-events-none'
      }`}
      aria-label="Voltar ao topo"
    >
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
        <path d="m18 15-6-6-6 6"/>
      </svg>
    </button>
  );
};

export default ScrollToTop;
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}
interface ProductCardProps {
  name: string;
  price: string;
  color: string;
  image: string;
  className?: string;
  style?: React.CSSProperties; // Adicionar esta linha
}